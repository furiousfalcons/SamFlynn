// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4328.SamFlynn;

import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Servo;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.Ultrasonic;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    public static SpeedController driveTrainLeft;
    
    public static SpeedController driveTrainRight;
    
    public static DifferentialDrive driveTrain;
    
    public static SpeedController frontElevator;
    public static SpeedController backElevator;
    
    public static SpeedController winch1;
    public static SpeedController winch2;
    public static SpeedControllerGroup winch;
    
    public static SpeedController cubeManipulator1;
    public static SpeedController cubeManipulator2;
    public static SpeedControllerGroup cubeManipulator;
    
    public static Ultrasonic leftSonic;
    public static Ultrasonic rightSonic;
    
    public static Encoder leftEncoder;
    public static Encoder rightEncoder;
   
    public static Servo cameraServo;
    
    @SuppressWarnings("deprecation")
	public static void init() {
    	
    	
        driveTrainLeft = new Spark(0);
        driveTrainLeft.setInverted(false);
        
        driveTrainRight = new Spark(1);
        driveTrainRight.setInverted(false);
        
        driveTrain = new DifferentialDrive(driveTrainLeft, driveTrainRight);
        
        driveTrain.setSafetyEnabled(false);
        driveTrain.setExpiration(0.1);
        driveTrain.setMaxOutput(1.0);
        
        frontElevator = new Spark(4);
        backElevator = new Spark(2);
        
        winch1 = new Spark(5);
        winch2 = new Spark(6);
        winch = new SpeedControllerGroup(winch1,winch2);
        
        cubeManipulator1 = new Spark(7);
        cubeManipulator2 = new Spark(9);
        cubeManipulator = new SpeedControllerGroup(cubeManipulator1,cubeManipulator2);

        leftSonic = new Ultrasonic(0,1);
        rightSonic = new Ultrasonic(6,7);
        leftSonic.setAutomaticMode(true);
        rightSonic.setAutomaticMode(true);
        
        leftEncoder = new Encoder(2, 3, true, Encoder.EncodingType.k4X);
        rightEncoder = new Encoder(4, 5, false, Encoder.EncodingType.k4X);
        leftEncoder.reset();
        rightEncoder.reset();
        
        cameraServo = new Servo(8);
        
    }
}
